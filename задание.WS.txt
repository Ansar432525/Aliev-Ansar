#ZADANIE 1 "СТУДЕНТ"
class Student:
    def __init__(self, name, age, GPA):
        self.name = name
        self.age = age
        self.GPA = GPA
    def get_name(self):
        return self.name
    def set_name(self, name):
        self.name = name
    def get_age(self):
        return self.age
    def set_age(self, age):
        self.age = age
    def get_GPA(self):
        return self.GPA
    def set_GPA(self, GPA):
        self.GPA = GPA

student = Student("Ансар Алиев", 16, 3.3)
print(student.get_name())

student.set_name("Магомед Магомедов")
print(student.get_name())


#ZADANIE 2 "ПРЯМОУГОЛЬНИК"
class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width
    def get_length(self):
        return self.length
    def set_length(self, length):
        self.length = length
    def get_width(self):
        return self.width
    def set_width(self, width):
        self.width = width
    def get_area(self):
        return self.length * self.width
    def get_perimeter(self):
        return 2 * (self.length + self.width)

rectangle = Rectangle(5, 3)

print(rectangle.get_length())
print(rectangle.get_width())

#ZADANIE 3 "АВТОМОБИЛЬ"
class Car:
    def __init__(self, brand, model, year, mileage):
        self.brand = brand
        self.model = model
        self.year = year
        self.mileage = mileage
    def get_brand(self):
        return self.brand
    def set_brand(self, brand):
        self.brand = brand
    def get_model(self):
        return self.model
    def set_model(self, model):
        self.model = model
    def get_year(self):
        return self.year
    def set_year(self, year):
        self.year = year
    def get_mileage(self):
        return self.mileage
    def set_mileage(self, mileage):
        self.mileage = mileage

car = Car("Toyota", "Camry", 2022, 123000)

print(car.get_brand())
print(car.get_model())
print(car.get_year())
print(car.get_mileage())


#ZADANIE 4 "БАНКОВСКИЙ СЧЕТ"
#------------------------
class BankAccount:
    def __init__(self, name, i_balance=0):
        self.name = name
        self.balance = i_balance

    def deposit(self, na_summa):
        if na_summa > 0:
            self.balance += na_summa
            return f"Деньги зачислены на карту успешно!. Ваш баланс: {self.balance}"
        else:
            return "Сумма пополнения должна быть положительной"

    def withdraw(self, amount):
        if amount > 0:
            if self.balance >= amount:
                self.balance -= amount
                return f"Деньги списаны. Ваш баланс: {self.balance}"
            else:
                return "Баланс пустой"
        else:
            return "Сумма списания должнп быть* больше 0!"

account1 = BankAccount("Алиев Ансар", 650)
print(account1.deposit(50))
print(account1.withdraw(200))




#ZADANIE 5 "ТРЕУГОЛЬНИК"
class Triangle:
    def __init__(self, side1, side2, side3):
        self.side1 = side1
        self.side2 = side2
        self.side3 = side3
    def get_side1(self):
        return self.side1
    def get_side2(self):
        return self.side2
    def get_side3(self):
        return self.side3
    def set_side1(self, side1):
        self.side1 = side1
    def set_side2(self, side2):
        self.side2 = side2
    def set_side3(self, side3):
        self.side3 = side3
    def get_triangle_type(self):
        if self.side1 == self.side2 == self.side3:
            return "равносторонний"
        elif self.side1 == self.side2 or self.side1 == self.side3 or self.side2 == self.side3:
            return "равнобедренный"
        else:
            return "разносторонний"
    def get_area(self):
        s = (self.side1 + self.side2 + self.side3) / 2
        area = (s * (s - self.side1) * (s - self.side2) * (s - self.side3)) ** 0.5
        return area

triangle = Triangle(5, 5, 5)
print(triangle.get_side1())
print(triangle.get_side2())
print(triangle.get_side3())





